/*
 * Â© Bart Kampers
 */
package bka.demo.clock;

import bka.awt.clock.*;
import java.awt.*;
import java.util.*;

public class ClockPanel extends javax.swing.JPanel {

    public ClockPanel() {
        final int radius = 250;
        Point center = new Point(radius, radius);
        Scale scale = new Scale(0, 60);
        renderer = new ClockRenderer(center, new Scale(1, 12, 1.0 / 12.0, 1.0));
        renderer.addClockFace(radius, Color.WHITE);
        MarkerRingRenderer markers = renderer.addMarkerRingRenderer(radius, 1, radius / 75, 5, radius / 25, new Color(127, 127, 255), radius / 50f);
        markers.setScale(scale);
        renderer.addNumberRingRenderer(radius * 0.9, 1, new Color(190, 190, 255), new Font(Font.SANS_SERIF, Font.BOLD, radius / 10));
        hourHand = renderer.addNeedleRenderer((int) (radius * 0.6), (int) (radius * 0.03), Color.BLACK, (float) radius / 20);
        minuteHand = renderer.addNeedleRenderer((int) (radius * 0.8), (int) (radius * 0.04), Color.BLACK, (float) radius / 30);
        minuteHand.setScale(scale);
        renderer.add(minuteHand);
        secondHand = renderer.addNeedleRenderer((int) (radius * 0.9), (int) (radius * 0.045), Color.RED, (float) radius / 100);
        secondHand.setScale(scale);
        renderer.add(secondHand);
        initComponents();
        Timer timer = new Timer();
        timer.schedule(timerTask, 0, 10);
    }

    TimerTask timerTask = new TimerTask() {
        @Override
        public void run() {
            long millis = System.currentTimeMillis();
            double hour = millis % (12 * 60 * 60 * 1000L) / (60 * 60 * 1000d);
            if (hour < 1.0) {
                hour += 12.0;
            }
            hourHand.setValue(hour);
            minuteHand.setValue(millis % 3600000 / 60000d);
            secondHand.setValue(millis % 60000 / 1000d);
            repaint();

        }
    };

    @Override
    public void paint(Graphics graphics) {
        super.paint(graphics);
        if (graphics instanceof Graphics2D) {
            renderer.paint((Graphics2D) graphics);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private final ClockRenderer renderer;
    private final NeedleRenderer hourHand;
    private final NeedleRenderer minuteHand;
    private final NeedleRenderer secondHand;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
