
Pascal program structure:

Program                       "PROGRAM" Identifier ";" Declarations CompoundStatement "."
Declarations                  ConstDeclaration Declarations
                              TypeDeclaration Declarations |
                              VariableDeclaration Declarations |
                              ProcedureDeclaration Declarations |
                              FunctionDeclaration Declarations |
                              ""
ConstDeclaration              "CONST" Identifier "=" Expression ";"
TypeDeclaration               "TYPE" Identifier "=" TypeExpression ";"
VariableDeclaration           "VAR" VariableDeclarationList ";"
ProcedureDeclaration          "PROCEDURE" Identifier ParameterDeclaration Declarations CompoundStatement ";"
FunctionDeclaration           "FUNCTION" Identifier ParameterDeclaration ":" Identifier Declarations CompoundStatement ";"
ParameterDeclaration          "(" ParameterList ")" |
                              ""
ParameterList                 ParameterExpression "," ParameterList |
                              ParameterExpression            
ParameterExpression           Identifier ":" ParameterTypeExpression |
                              "VAR" Identifier ":" ParameterTypeExpression
ParameterTypeExpression       Identifier |
                              "ARRAY" "OF" Identifier
VariableDeclarationList       VariableDeclarationExpression ";"  VariableDeclarationList |
                              VariableDeclarationExpression
VariableDeclarationExpression IdentifierList ":" TypeExpression ";"
TypeExpression                Identifier |
                              RangeExpression |
                              "(" IdentifierList ")" |
                              "ARRAY" "[" RangeExpression "]" "OF" TypeExpression |
                              Identifier "=" "RECORD" VariableDeclaration "END"
IdentifierList                Identifier "," IdentifierList |
                              Identifier 
RangeExpression               IntegerLiteral ".." IntegerLiteral |
                              Identifier ".." Identifier
CompoundStatement             "BEGIN" Statements "END"
StatementList                 Statement ";" StatementList |
                              Statement
Statement                     Assignable ":=" Expression
                              Call |
                              "IF" Expression "THEN" Statement |
                              "IF" Expression "THEN" Statement "ELSE" Statement |
                              "WHILE" Expression "DO" Statement |
                              "FOR" Identifier ":=" Expression "TO" Expression "DO" Statement |
                              "REPEAT" Statement "UNTIL" Expression |
                              ""
Assignable                    Identifier | 
                              Identifier "[" Expression "]"
Expression                    "(" Expression ")" |
                              UnaryOperator Experssion |
                              Expression BinaryOperator Expression |
                              Call |
                              Expression "[" Expression "]" |
                              Identifier |
                              Literal
Call                          Identifier "(" ArgumentList ")" |
                              Identifier
ArgumentList                  Exrpession "," ArgumentList |
                              Experssion
Identifier                    [A-Z_]+[A-Z0-9_]*
Literal                       IntegerLiteral |
                              RealLiteral |
                              "'".*"'" |
                              "FALSE" |
                              "TRUE"
IntegerLiteral                \d+
                              $[0-9A-F]+
RealLiteral                   \d+\.\d*(E[-+]?\d+)?
