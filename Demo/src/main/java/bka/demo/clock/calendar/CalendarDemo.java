/*
 * Â© Bart Kampers
 */
package bka.demo.clock.calendar;

import bka.calendar.*;
import java.util.*;

public class CalendarDemo extends javax.swing.JFrame {

    /**
     * Creates new form CalendarFrame
     */
    public CalendarDemo() {
        initComponents();
        calendarsPanel.add(gregorianPanel);
        calendarsPanel.add(earthianPanel);
        Timer timer = new Timer();
        timer.schedule(timerTask, nextSecond(), MILLIS_PER_SECOND);
    }

    private static long nextSecond() {
        return MILLIS_PER_SECOND - System.currentTimeMillis() % MILLIS_PER_SECOND;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        calendarsPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(965, 300));
        setName("Calendars"); // NOI18N

        calendarsPanel.setPreferredSize(new java.awt.Dimension(1000, 400));
        calendarsPanel.setSize(new java.awt.Dimension(1000, 400));
        getContentPane().add(calendarsPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalendarDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalendarDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalendarDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalendarDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new CalendarDemo().setVisible(true));
    }

    private final TimerTask timerTask = new TimerTask() {
        @Override
        public void run() {
            long millis = System.currentTimeMillis();
            gregorian.setTimeInMillis(millis);
            gregorianPanel.update();
            earthian.setTimeInMillis(millis);
            earthianPanel.update();
        }
    };

    private final Calendar gregorian = Calendar.getInstance();
    private final Calendar earthian = EarthianCalendar.getInstance();
    private final CalendarPanel gregorianPanel = new CalendarPanel(new CalendarPanelConfiguration(), new CalendarModel(gregorian));
    private final CalendarPanel earthianPanel = new CalendarPanel(new EarthianCalendarPanelConfiguration(), new EarthianCalendarModel(earthian));

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel calendarsPanel;
    // End of variables declaration//GEN-END:variables

    private static final long MILLIS_PER_SECOND = 1000;


}
