/*
** Â© Bart Kampers
*/
package bka.demo.calendar;

import bka.awt.clock.*;
import java.awt.*;
import java.util.*;
import javax.swing.*;


public class CalendarPanel extends javax.swing.JPanel {

    public static final Color FONT_COLOR = new Color(0, 0, 135);

    public CalendarPanel(CalendarPanelConfiguration configuration, CalendarModel model) {
        this.model = Objects.requireNonNull(model);
        initComponents();
        final int radius = Math.min(clockPanel.getWidth(), clockPanel.getHeight()) / 2;
        final Point center = new Point(clockPanel.getWidth() / 2, clockPanel.getHeight() / 2);
        final int fontSize = 12;
        renderer = new ClockRenderer(center, configuration.getHourScale());
        MarkerRingRenderer markers = renderer.addMarkerRingRenderer(radius - (fontSize * 2), 1, fontSize / 4, 5, fontSize / 2, Color.BLUE, 3f);
        Scale fractionScale = configuration.getFractionScale();
        markers.setScale(fractionScale);
        renderer.addNumberRingRenderer(radius * 9 / 10, configuration.getHourInterval(), FONT_COLOR, getFont(Font.BOLD, fontSize));
        hourHand = renderer.addNeedleRenderer(radius / 2, 5, Color.BLACK, 5);
        minuteHand = renderer.addNeedleRenderer(radius - (fontSize + 10), 5, Color.BLACK, 3);
        minuteHand.setScale(fractionScale);
        renderer.add(minuteHand);
        secondHand = renderer.addNeedleRenderer(radius - (fontSize + 5), 5, Color.RED, 1f);
        secondHand.setScale(fractionScale);
        renderer.add(secondHand);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        yearPanel = new javax.swing.JPanel();
        yearLabel = new javax.swing.JLabel();
        weekLabel = new javax.swing.JLabel();
        clockPanel = new ClockPanel();
        datePanel = new javax.swing.JPanel();
        dayLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        monthLabel = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        yearLabel.setFont(new java.awt.Font("Times New Roman", 0, 32)); // NOI18N
        yearLabel.setForeground(FONT_COLOR);
        yearLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        yearLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        yearLabel.setSize(new java.awt.Dimension(120, 58));

        weekLabel.setFont(getFont(14));
        weekLabel.setForeground(FONT_COLOR);
        weekLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        weekLabel.setMaximumSize(new java.awt.Dimension(93, 22));
        weekLabel.setMinimumSize(new java.awt.Dimension(93, 22));
        weekLabel.setPreferredSize(new java.awt.Dimension(93, 22));
        weekLabel.setSize(new java.awt.Dimension(93, 22));

        clockPanel.setSize(new java.awt.Dimension(412, 193));

        javax.swing.GroupLayout clockPanelLayout = new javax.swing.GroupLayout(clockPanel);
        clockPanel.setLayout(clockPanelLayout);
        clockPanelLayout.setHorizontalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 412, Short.MAX_VALUE)
        );
        clockPanelLayout.setVerticalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 193, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout yearPanelLayout = new javax.swing.GroupLayout(yearPanel);
        yearPanel.setLayout(yearPanelLayout);
        yearPanelLayout.setHorizontalGroup(
            yearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, yearPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(clockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(yearPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(yearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(weekLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        yearPanelLayout.setVerticalGroup(
            yearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yearPanelLayout.createSequentialGroup()
                .addGroup(yearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(yearPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(yearLabel))
                    .addGroup(yearPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(weekLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(yearPanel, java.awt.BorderLayout.NORTH);

        datePanel.setPreferredSize(new java.awt.Dimension(406, 63));

        dayLabel.setFont(getFont(24));
        dayLabel.setForeground(FONT_COLOR);
        dayLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        dayLabel.setMaximumSize(new java.awt.Dimension(96, 22));
        dayLabel.setMinimumSize(new java.awt.Dimension(96, 22));
        dayLabel.setSize(new java.awt.Dimension(96, 22));

        dateLabel.setFont(getFont(38));
        dateLabel.setForeground(FONT_COLOR);
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLabel.setMaximumSize(new java.awt.Dimension(30, 30));
        dateLabel.setMinimumSize(new java.awt.Dimension(30, 30));
        dateLabel.setPreferredSize(new java.awt.Dimension(30, 30));
        dateLabel.setSize(new java.awt.Dimension(30, 30));

        monthLabel.setFont(getFont(24));
        monthLabel.setForeground(FONT_COLOR);
        monthLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        monthLabel.setMaximumSize(new java.awt.Dimension(93, 22));
        monthLabel.setMinimumSize(new java.awt.Dimension(93, 22));
        monthLabel.setPreferredSize(new java.awt.Dimension(93, 22));
        monthLabel.setSize(new java.awt.Dimension(93, 22));

        javax.swing.GroupLayout datePanelLayout = new javax.swing.GroupLayout(datePanel);
        datePanel.setLayout(datePanelLayout);
        datePanelLayout.setHorizontalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(monthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        datePanelLayout.setVerticalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datePanelLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monthLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dayLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        add(datePanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    public void update() {
        yearLabel.setText(model.getYear());
        weekLabel.setText(model.getWeek());
        if (!model.getDayOfYear().isEmpty()) {
            dayLabel.setText(model.getDayOfYear().get());
        }
        else {
            setFontColor(dayLabel, model.getDayOfWeekColor());
            dayLabel.setText(model.getDayOfWeek());
        }
        dateLabel.setText(model.getDate());
        monthLabel.setText(model.getMonth());
        hourHand.setValue(model.getHour());
        minuteHand.setValue(model.getMinute());
        secondHand.setValue(model.getSecond());
        repaint();
    }

    private void setFontColor(JLabel component, Optional<Color> color) {
        if (color.isPresent()) {
            component.setForeground(color.get());
        }
        else {
            component.setForeground(FONT_COLOR);
        }
    }

    private class ClockPanel extends javax.swing.JPanel {

        @Override
        public void paint(Graphics graphics) {
            super.paint(graphics);
            if (graphics instanceof Graphics2D graphics2D) {
                renderer.paint(graphics2D);
            }
            else {
                graphics.setColor(FONT_COLOR);
                graphics.drawString("Unexpected graphics type " + graphics.getClass(), 0, getSize().height / 2);
            }
        }

    }

    private static Font getFont(int size) {
        return getFont(Font.PLAIN, size);
    }

    private static Font getFont(int style, int size) {
        return new Font("Helvetica", style, size);
    }

    public CalendarModel getModel() {
        return model;
    }

    private final CalendarModel model;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel clockPanel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel datePanel;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JLabel monthLabel;
    private javax.swing.JLabel weekLabel;
    private javax.swing.JLabel yearLabel;
    private javax.swing.JPanel yearPanel;
    // End of variables declaration//GEN-END:variables

    private final ClockRenderer renderer;
    private final NeedleRenderer hourHand;
    private final NeedleRenderer minuteHand;
    private final NeedleRenderer secondHand;

}
